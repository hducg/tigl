// Copyright (c) 2018 RISC Software GmbH
//
// This file was generated by CPACSGen from CPACS XML Schema (c) German Aerospace Center (DLR/SC).
// Do not edit, all changes are lost when files are re-generated.
//
// Licensed under the Apache License, Version 2.0 (the "License")
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

#pragma once

#include <string>
#include <tixi.h>
#include "CPACSEtaIsoLine.h"
#include "tigl_internal.h"

namespace tigl
{
namespace generated
{
    // This class is used in:
    // CPACSCutOutProfiles

    // generated from /xsd:schema/xsd:complexType[243]
    /// <summary>
    /// <para>
    /// Definition of cut out profiles.</para>
    /// </summary>
    /// <remarks>
    /// <content>
    /// <para>
    /// Optional, the exact shape between the upper and lower
    /// skin cut out can be given by using cutOutProfiles. In general
    /// cut out profiles are open profiles and not closed profiles as
    /// e.g. wing airfoils. The placement, scaling and (partly) rotation
    /// of the cut out profiles is fixed as the beginning and ending
    /// point of the profile is fixed as can be seen in the two pictures
    /// below.</para>
    /// <mediaLink>
    /// <image href="wingCutOut">
    /// </image>
    /// </mediaLink>
    /// <mediaLink>
    /// <image href="wingCutOut2">
    /// </image>
    /// </mediaLink>
    /// </content>
    /// </remarks>
    class CPACSCutOutProfile
    {
    public:
        TIGL_EXPORT CPACSCutOutProfile();
        TIGL_EXPORT virtual ~CPACSCutOutProfile();

        TIGL_EXPORT virtual void ReadCPACS(const TixiDocumentHandle& tixiHandle, const std::string& xpath);
        TIGL_EXPORT virtual void WriteCPACS(const TixiDocumentHandle& tixiHandle, const std::string& xpath) const;

        TIGL_EXPORT virtual const std::string& GetProfileUID() const;
        TIGL_EXPORT virtual void SetProfileUID(const std::string& value);

        TIGL_EXPORT virtual const CPACSEtaIsoLine& GetEta() const;
        TIGL_EXPORT virtual CPACSEtaIsoLine& GetEta();

        TIGL_EXPORT virtual const double& GetRotZ() const;
        TIGL_EXPORT virtual void SetRotZ(const double& value);

    protected:
        /// Reference to the profile uID. Profiles should
        /// be linked in profiles/structuralProfiles
        std::string     m_profileUID;

        /// Relative spanwise position of the cut out
        /// profile. The eta coordinate refers to the control surface and
        /// desribes the cut out profile at the leading edge of the control
        /// surface.
        CPACSEtaIsoLine m_eta;

        /// Rotation of the airfoil around the control
        /// surface middle plane normal direciotn. Reference point is the
        /// most forward point of the airfoil. Defaults to 90Â°, which is
        /// equivalent to the airfoilplacement in flight direction (along
        /// wings-x axis).
        double          m_rotZ;

    private:
#ifdef HAVE_CPP11
        CPACSCutOutProfile(const CPACSCutOutProfile&) = delete;
        CPACSCutOutProfile& operator=(const CPACSCutOutProfile&) = delete;

        CPACSCutOutProfile(CPACSCutOutProfile&&) = delete;
        CPACSCutOutProfile& operator=(CPACSCutOutProfile&&) = delete;
#else
        CPACSCutOutProfile(const CPACSCutOutProfile&);
        CPACSCutOutProfile& operator=(const CPACSCutOutProfile&);
#endif
    };
} // namespace generated

// Aliases in tigl namespace
#ifdef HAVE_CPP11
using CCPACSCutOutProfile = generated::CPACSCutOutProfile;
#else
typedef generated::CPACSCutOutProfile CCPACSCutOutProfile;
#endif
} // namespace tigl
